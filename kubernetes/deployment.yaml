apiVersion: apps/v1
kind: Deployment
metadata:
  name: photon-neuro-app
  namespace: photon-neuro
  labels:
    app: photon-neuro
    version: "0.6.0-autonomous"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: photon-neuro
  template:
    metadata:
      labels:
        app: photon-neuro
        version: "0.6.0-autonomous"
    spec:
      containers:
      - name: photon-neuro
        image: photon-neuromorphics:0.6.0-autonomous
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: PYTHONPATH
          value: "/app"
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: photon-neuro-config
              key: LOG_LEVEL
        - name: ENV
          value: "production"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2"
        livenessProbe:
          exec:
            command:
            - python
            - "-c"
            - "import photon_neuro; print('OK')"
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - python
            - "-c"
            - "import photon_neuro; print('OK')"
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: data-volume
          mountPath: /app/data
      volumes:
      - name: config-volume
        configMap:
          name: photon-neuro-config
      - name: data-volume
        emptyDir: {}
      restartPolicy: Always
